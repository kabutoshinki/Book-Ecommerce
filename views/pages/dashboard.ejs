<div class="container mx-auto py-12 px-4">
  <h1 class="text-4xl font-bold text-center mb-4">Dashboard</h1>

  <div class="grid lg:grid-cols-4 gap-8">
    <div
      class="bg-white p-2 rounded-lg shadow-md hover:scale-105 transition-transform duration-300"
    >
      <h3 class="text-xl font-bold mb-4">Total Users</h3>
      <p class="text-3xl"><%= users %></p>
    </div>

    <div
      class="bg-white p-2 rounded-lg shadow-md hover:scale-105 transition-transform duration-300"
    >
      <h3 class="text-xl font-bold mb-4">Total Books</h3>
      <p class="text-3xl"><%= books %></p>
    </div>

    <div
      class="bg-white p-2 rounded-lg shadow-md hover:scale-105 transition-transform duration-300"
    >
      <h3 class="text-xl font-bold mb-4">Total Reviews</h3>
      <p class="text-3xl"><%= reviews %></p>
    </div>
    <div
      class="bg-white p-2 rounded-lg shadow-md hover:scale-105 transition-transform duration-300"
    >
      <h3 class="text-xl font-bold mb-4">Revenue</h3>
      <p class="text-3xl">$ <%= totalRevenue %></p>
    </div>
  </div>
  <div class="grid lg:grid-cols-2 gap-8 mt-10">
    <!-- Revenue Chart Section -->
    <div
      class="bg-white p-4 rounded-lg shadow-md h-[500px] hover:scale-105 transition-transform duration-300"
    >
      <h3 class="text-xl font-bold mb-4">Revenue Distribution</h3>
      <canvas class="w-16 h-16" id="revenueChart"></canvas>
    </div>

    <!-- Book Ratings Section -->
    <div class="bg-white p-4 rounded-lg shadow-md overflow-y-auto h-[500px]">
      <h3 class="text-xl font-bold my-4">Book Ratings</h3>
      <ul>
        <!-- Iterate over each book -->
        <% booksRate.forEach(book => { %>
        <li
          class="flex items-center space-x-4 shadow-md rounded-md p-2 mb-5 hover:scale-105 transition-transform duration-300"
        >
          <!-- Book Cover Image -->
          <img
            src="<%= book.image %>"
            alt="<%= book.title %> Cover"
            class="w-16 h-16 rounded-md"
          />
          <div>
            <!-- Book Title -->
            <p class="font-semibold"><%= book.title %></p>
            <!-- Average Rate -->
            <p>
              Average Rate: <% const fullStars = Math.floor(book.average_rate);
              %> <% let remainingStars = 5 - fullStars; %> <% const hasHalfStar
              = (book.average_rate % 1) >= 0.5; %>

              <!-- Render full stars in yellow -->
              <% for (let i = 0; i < fullStars; i++) { %>
              <i class="fas fa-star" style="color: rgb(255, 204, 0)"></i>
              <% } %>

              <!-- Render half star in yellow if necessary -->
              <% if (hasHalfStar) { %>
              <i
                class="fas fa-star-half-alt"
                style="color: rgb(255, 204, 0)"
              ></i>
              <% remainingStars--; %> <% } %>

              <!-- Render remaining stars in black -->
              <% for (let i = 0; i < remainingStars; i++) { %>
              <i class="fas fa-star"></i>
              <% } %>
            </p>
            <!-- Sold Quantity -->
            <p>Sold Quantity: <%= book.sold_quantity %></p>
          </div>
        </li>
        <% }); %>
      </ul>
    </div>
  </div>
</div>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
  // Parse revenue data from the server-side
  const revenueData = <%- JSON.stringify(revenue) %>;

  // Calculate total revenue for each status
  const statusData = {
    Processing: revenueData['Processing'] || 0,
    Succeeded: revenueData['Succeeded'] || 0,
    Failed: revenueData['Failed'] || 0,
  };

  // Get the chart canvas element
  const ctxRevenue = document.getElementById('revenueChart');

  // Ensure the canvas element exists before attempting to render the chart
  if (ctxRevenue) {
    new Chart(ctxRevenue, {
      type: 'pie',
      data: {
        labels: ['Processing', 'Succeeded', 'Failed'],
        datasets: [{
          data: [statusData.Processing, statusData.Succeeded, statusData.Failed],
          backgroundColor: [
            'rgba(255, 159, 64, 0.5)',
            'rgba(75, 192, 192, 0.5)',
            'rgba(255, 99, 132, 0.5)',
          ],
          borderWidth: 1,
        }],
      },
      options: {
        responsive: true,
        plugins: {
          legend: {
            position: 'right',
          },
          title: {
            display: true,
            text: 'Revenue Distribution by Order Status',
          },
        },
      },
    });
  }
</script>
